webpackJsonp([23,35],{589:function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{"default":e}}function s(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n,a,o,r,p,l,c,d,h,u){var m=["$scope"],C=function(){function e(n){s(this,e),this.$scope=n,this.showSpinner=!1,this.selectedCreateOption="new",this.exampleApi=t(1761),p.cloneFromApiId&&(this.cloneFromApiId=p.cloneFromApiId),window.setTimeout(function(){c.customerReady()}),this.apis.length||(this.selectedCreateOption="exampleApi",h.showCreateExampleApiModal())}return i(e,[{key:"onCreateOptionChange",value:function(){var e=this;this.clearForm(),window.setTimeout(function(){return e.$scope.$digest()})}},{key:"onImportExampleApi",value:function(){d.showAllHints(),h.setShowDeployApiTooltipOnResourcePageLoad(!0)}},{key:"createAPI",value:function(){var e=this;this.showSpinner=!0;var t="/apigateway/backend/restapis",s={name:this.apiName,description:this.apiDescription};return this.cloneFromApiId&&(s.cloneFrom=this.cloneFromApiId),o.post(t,s).then(function(t){var s=t.data;return e.showSpinner=!1,a.$broadcast("apiCreate:apiCreated",s),n(function(){r.go("aws.apiManager.apis.api.details.resources.resource.details",{apiId:s.id})}),s})["catch"](function(n){var t=n.data.message;429===n.status&&(t=u.instant("API.API_CREATE_LIMIT_THROTTLING_MESSAGE")),l.showError({message:t}),e.showSpinner=!1})}},{key:"selectClone",value:function(){var e=this;if(this.cloneFromApiId){var n=this.apis.find(function(n){return n.id===e.cloneFromApiId});n&&(this.apiName=u.instant("API.CREATE_CLONE_FROM",{apiName:n.name}),this.apiDescription=n.description)}}},{key:"clearForm",value:function(){this.apiName=null,this.apiDescription=null,this.cloneFromApiId=null}}]),e}();return C.$inject=m,{restrict:"E",scope:{api:"=",apis:"="},template:t(1670),bindToController:!0,controllerAs:"apiCreateCtrl",controller:C}}Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),r=t(2),p=a(r);t(2241);var l=["$window","$timeout","$rootScope","$http","$state","$stateParams","utilsService","awscService","hintService","firstTimeUserModalsService","$translate"];o.$inject=l,n["default"]=p["default"].module("aws.apiManager.api",[t(84)["default"].name,t(128)["default"].name,t(218)["default"].name]).directive("apiCreate",o)},1576:function(e,n,t){n=e.exports=t(8)(),n.push([e.id,"api-create{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}api-create .api-create{-ms-flex:1;flex:1;overflow:auto}api-create .example-api-section .select-swagger-file-button{display:none}",""])},1670:function(e,n){e.exports='<div class=api-create> <div> <h2 class=create-new-api-title translate=API.CREATE_NEW_API_TITLE></h2> <p translate=API.CREATE_NEW_API_DESCRIPTION></p> <div class=awsctk-input-area style=margin-left:15rem> <label class=api-creation-type-radios for=apiCreate__new> <input id=apiCreate__new type=radio value=new ng-model=apiCreateCtrl.selectedCreateOption ng-change=apiCreateCtrl.onCreateOptionChange() /> <span translate=API.NEW_API_TITLE></span> </label> <label class=api-creation-type-radios ng-show=apiCreateCtrl.apis.length for=apiCreate__clone> <input id=apiCreate__clone type=radio value=clone ng-model=apiCreateCtrl.selectedCreateOption ng-change=apiCreateCtrl.onCreateOptionChange() /> <span translate=API.CREATE_CLONE_LABEL></span> </label> <label class=api-creation-type-radios for=apiCreate__import> <input id=apiCreate__import type=radio value=import ng-model=apiCreateCtrl.selectedCreateOption ng-change=apiCreateCtrl.onCreateOptionChange() /> <span translate=API.IMPORT_FROM_SWAGGER_TITLE></span> </label> <label class=api-creation-type-radios for=apiCreate__exampleApi> <input id=apiCreate__exampleApi type=radio value=exampleApi ng-model=apiCreateCtrl.selectedCreateOption ng-change=apiCreateCtrl.onCreateOptionChange() /> <span translate=API.EXAMPLE_API_LABEL></span> </label> </div> </div> <div class=clone-api-section ng-show="apiCreateCtrl.apis.length && apiCreateCtrl.selectedCreateOption === \'clone\'"> <div class=full-page-form> <h2 class=clone-api-title translate=API.CLONE_SOURCE_API_TITLE></h2> <p translate=API.CREATE_CLONE_DESCRIPTION></p> <div class=awsctk-input-area> <div class=awsctk-input-label> <label translate=API.CREATE_CLONE_LABEL></label> </div> <div class=awsctk-input-field> <select name=cloneFromApiId class="awsctk-form-medium backplane-text-input" ng-model=apiCreateCtrl.cloneFromApiId ng-options="api.id as api.name for api in apiCreateCtrl.apis" ng-change=apiCreateCtrl.selectClone()> <option value="" translate=API.CREATE_CLONE_SELECT_OPTION disabled=disabled selected=selected></option> </select> </div> </div> </div> </div> <div class=new-api-section ng-show="apiCreateCtrl.selectedCreateOption === \'new\' || apiCreateCtrl.selectedCreateOption === \'clone\'"> <div class=full-page-form> <h2 class=api-name-description translate=API.CREATE_NAME_AND_DESCRIPTION_TITLE></h2> <p translate=API.CREATE_NAME_AND_DESCRIPTION_TEXT></p> <div class=awsctk-input-area> <div class=awsctk-input-label> <label><span translate=API.CREATE_API_NAME_LABEL></span>*</label> </div> <div class=awsctk-input-field> <input name=apiName placeholder="{{\'API.CREATE_MY_API_PLACEHOLDER\' | translate}}" type=text class="awsctk-form-medium backplane-text-input" ng-model=apiCreateCtrl.apiName /> </div> </div> <div class=awsctk-input-area> <div class=awsctk-input-label> <label translate=API.CREATE_DESCRIPTION_LABEL></label> </div> <div class=awsctk-input-field> <textarea name=apiDescription class="awsctk-form-medium backplane-text-input textarea-no-resize" ng-model=apiCreateCtrl.apiDescription rows=5></textarea> </div> </div> </div> <div class="full-page-form-footer clearfix"> <div class=pull-left> <strong translate=API.CREATE_REQUIRED_LABEL></strong> </div> <div ng-show="apiCreateCtrl.selectedCreateOption === \'new\'" class=pull-right> <button class="backplane-btn-primary create-api-button" type=button ng-disabled="!apiCreateCtrl.apiName || apiCreateCtrl.showSpinner" ng-click=apiCreateCtrl.createAPI()> <i ng-show=apiCreateCtrl.showSpinner class="fa fa-refresh fa-spin button-spinner"></i> <span translate=API.CREATE_NEW_API_BUTTON></span> </button> </div> <div ng-show="apiCreateCtrl.selectedCreateOption === \'clone\'" class=pull-right> <button class="backplane-btn-primary clone-api-button" type=button ng-disabled="!apiCreateCtrl.cloneFromApiId || !apiCreateCtrl.apiName || apiCreateCtrl.showSpinner" ng-click=apiCreateCtrl.createAPI()> <i ng-show=apiCreateCtrl.showSpinner class="fa fa-refresh fa-spin button-spinner"></i> <span translate=API.CREATE_CLONE_API_BUTTON></span> </button> </div> </div> </div> <div class=import-api-section ng-show="apiCreateCtrl.selectedCreateOption === \'import\'"> <h2 class=import-api-title translate=API.IMPORT_FROM_SWAGGER_TITLE></h2> <p translate=API.API_IMPORT_INTRO_TEXT></p> <api-import></api-import> </div> <div class=example-api-section ng-show="apiCreateCtrl.selectedCreateOption === \'exampleApi\'"> <h2 class=example-api-title translate=API.EXAMPLE_API_TITLE></h2> <p translate=API.EXAMPLE_API_INTRO_TEXT></p> <api-import editor-read-only=true editor-value={{apiCreateCtrl.exampleApi}} on-import=apiCreateCtrl.onImportExampleApi()></api-import> </div> </div> '},1761:function(e,n){e.exports='{\n  "swagger": "2.0",\n  "info": {\n    "description": "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Pet Store endpoints",\n    "title": "PetStore"\n  },\n  "schemes": [\n    "https"\n  ],\n  "paths": {\n    "/": {\n      "get": {\n        "tags": [\n          "pets"\n        ],\n        "description": "PetStore HTML web page containing API usage information",\n        "consumes": [\n          "application/json"\n        ],\n        "produces": [\n          "text/html"\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "headers": {\n              "Content-Type": {\n                "type": "string",\n                "description": "Media type of request"\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Content-Type": "\'text/html\'"\n              },\n              "responseTemplates": {\n                "text/html": "<html>\\n    <head>\\n        <style>\\n        body {\\n            color: #333;\\n            font-family: Sans-serif;\\n            max-width: 800px;\\n            margin: auto;\\n        }\\n        </style>\\n    </head>\\n    <body>\\n        <h1>Welcome to your Pet Store API</h1>\\n        <p>\\n            You have succesfully deployed your first API. You are seeing this HTML page because the <code>GET</code> method to the root resource of your API returns this content as a Mock integration.\\n        </p>\\n        <p>\\n            The Pet Store API contains the <code>/pets</code> and <code>/pets/{petId}</code> resources. By making a <a href=\\"/$context.stage/pets/\\" target=\\"_blank\\"><code>GET</code> request</a> to <code>/pets</code> you can retrieve a list of Pets in your API. If you are looking for a specific pet, for example the pet with ID 1, you can make a <a href=\\"/$context.stage/pets/1\\" target=\\"_blank\\"><code>GET</code> request</a> to <code>/pets/1</code>.\\n        </p>\\n        <p>\\n            You can use a REST client such as <a href=\\"https://www.getpostman.com/\\" target=\\"_blank\\">Postman</a> to test the <code>POST</code> methods in your API to create a new pet. Use the sample body below to send the <code>POST</code> request:\\n        </p>\\n        <pre>\\n{\\n    \\"type\\" : \\"cat\\",\\n    \\"price\\" : 123.11\\n}\\n        </pre>\\n    </body>\\n</html>"\n              }\n            }\n          },\n          "passthroughBehavior": "when_no_match",\n          "requestTemplates": {\n            "application/json": "{\\"statusCode\\": 200}"\n          },\n          "type": "mock"\n        }\n      }\n    },\n    "/pets": {\n      "get": {\n        "tags": [\n          "pets"\n        ],\n        "summary": "List all pets",\n        "produces": [\n          "application/json"\n        ],\n        "parameters": [\n          {\n            "name": "type",\n            "in": "query",\n            "description": "The type of pet to retrieve",\n            "required": false,\n            "type": "string"\n          },\n          {\n            "name": "page",\n            "in": "query",\n            "description": "Page number of results to return.",\n            "required": false,\n            "type": "string"\n          }\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "schema": {\n              "$ref": "#/definitions/Pets"\n            },\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "URI that may access the resource"\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Access-Control-Allow-Origin": "\'*\'"\n              }\n            }\n          },\n          "requestParameters": {\n            "integration.request.querystring.page": "method.request.querystring.page",\n            "integration.request.querystring.type": "method.request.querystring.type"\n          },\n          "uri": "http://petstore-demo-endpoint.execute-api.com/petstore/pets",\n          "passthroughBehavior": "when_no_match",\n          "httpMethod": "GET",\n          "type": "http"\n        }\n      },\n      "post": {\n        "tags": [\n          "pets"\n        ],\n        "operationId": "CreatePet",\n        "summary": "Create a pet",\n        "consumes": [\n          "application/json"\n        ],\n        "produces": [\n          "application/json"\n        ],\n        "parameters": [\n          {\n            "in": "body",\n            "name": "NewPet",\n            "required": true,\n            "schema": {\n              "$ref": "#/definitions/NewPet"\n            }\n          }\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "schema": {\n              "$ref": "#/definitions/NewPetResponse"\n            },\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "URI that may access the resource"\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Access-Control-Allow-Origin": "\'*\'"\n              }\n            }\n          },\n          "uri": "http://petstore-demo-endpoint.execute-api.com/petstore/pets",\n          "passthroughBehavior": "when_no_match",\n          "httpMethod": "POST",\n          "type": "http"\n        }\n      },\n      "options": {\n        "consumes": [\n          "application/json"\n        ],\n        "produces": [\n          "application/json"\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "schema": {\n              "$ref": "#/definitions/Empty"\n            },\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "URI that may access the resource"\n              },\n              "Access-Control-Allow-Methods": {\n                "type": "string",\n                "description": "Method or methods allowed when accessing the resource"\n              },\n              "Access-Control-Allow-Headers": {\n                "type": "string",\n                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Access-Control-Allow-Methods": "\'POST,GET,OPTIONS\'",\n                "method.response.header.Access-Control-Allow-Headers": "\'Content-Type,X-Amz-Date,Authorization,X-Api-Key\'",\n                "method.response.header.Access-Control-Allow-Origin": "\'*\'"\n              }\n            }\n          },\n          "passthroughBehavior": "when_no_match",\n          "requestTemplates": {\n            "application/json": "{\\"statusCode\\": 200}"\n          },\n          "type": "mock"\n        }\n      }\n    },\n    "/pets/{petId}": {\n      "get": {\n        "tags": [\n          "pets"\n        ],\n        "summary": "Info for a specific pet",\n        "operationId": "GetPet",\n        "produces": [\n          "application/json"\n        ],\n        "parameters": [\n          {\n            "name": "petId",\n            "in": "path",\n            "description": "The id of the pet to retrieve",\n            "required": true,\n            "type": "string"\n          }\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "schema": {\n              "$ref": "#/definitions/Pet"\n            },\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "URI that may access the resource"\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Access-Control-Allow-Origin": "\'*\'"\n              }\n            }\n          },\n          "requestParameters": {\n            "integration.request.path.petId": "method.request.path.petId"\n          },\n          "uri": "http://petstore-demo-endpoint.execute-api.com/petstore/pets/{petId}",\n          "passthroughBehavior": "when_no_match",\n          "httpMethod": "GET",\n          "type": "http"\n        }\n      },\n      "options": {\n        "consumes": [\n          "application/json"\n        ],\n        "produces": [\n          "application/json"\n        ],\n        "parameters": [\n          {\n            "name": "petId",\n            "in": "path",\n            "description": "The id of the pet to retrieve",\n            "required": true,\n            "type": "string"\n          }\n        ],\n        "responses": {\n          "200": {\n            "description": "Successful operation",\n            "schema": {\n              "$ref": "#/definitions/Empty"\n            },\n            "headers": {\n              "Access-Control-Allow-Origin": {\n                "type": "string",\n                "description": "URI that may access the resource"\n              },\n              "Access-Control-Allow-Methods": {\n                "type": "string",\n                "description": "Method or methods allowed when accessing the resource"\n              },\n              "Access-Control-Allow-Headers": {\n                "type": "string",\n                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."\n              }\n            }\n          }\n        },\n        "x-amazon-apigateway-integration": {\n          "responses": {\n            "default": {\n              "statusCode": "200",\n              "responseParameters": {\n                "method.response.header.Access-Control-Allow-Methods": "\'GET,OPTIONS\'",\n                "method.response.header.Access-Control-Allow-Headers": "\'Content-Type,X-Amz-Date,Authorization,X-Api-Key\'",\n                "method.response.header.Access-Control-Allow-Origin": "\'*\'"\n              }\n            }\n          },\n          "passthroughBehavior": "when_no_match",\n          "requestTemplates": {\n            "application/json": "{\\"statusCode\\": 200}"\n          },\n          "type": "mock"\n        }\n      }\n    }\n  },\n  "definitions": {\n    "Pets": {\n      "type": "array",\n      "items": {\n        "$ref": "#/definitions/Pet"\n      }\n    },\n    "Empty": {\n      "type": "object"\n    },\n    "NewPetResponse": {\n      "type": "object",\n      "properties": {\n        "pet": {\n          "$ref": "#/definitions/Pet"\n        },\n        "message": {\n          "type": "string"\n        }\n      }\n    },\n    "Pet": {\n      "type": "object",\n      "properties": {\n        "id": {\n          "type": "string"\n        },\n        "type": {\n          "type": "string"\n        },\n        "price": {\n          "type": "number"\n        }\n      }\n    },\n    "NewPet": {\n      "type": "object",\n      "properties": {\n        "type": {\n          "$ref": "#/definitions/PetType"\n        },\n        "price": {\n          "type": "number"\n        }\n      }\n    },\n    "PetType": {\n      "type": "string",\n      "enum": [\n        "dog",\n        "cat",\n        "fish",\n        "bird",\n        "gecko"\n      ]\n    }\n  },\n  "x-amazon-apigateway-documentation": {\n    "version": "v2.1",\n    "createdDate": "2016-11-17T07:03:59Z",\n    "documentationParts": [\n      {\n        "location": {\n          "type": "API"\n        },\n        "properties": {\n          "info": {\n            "description": "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Pet Store endpoints"\n          }\n        }\n      },\n      {\n        "location": {\n          "type": "METHOD",\n          "method": "GET"\n        },\n        "properties": {\n          "tags": [\n            "pets"\n          ],\n          "description": "PetStore HTML web page containing API usage information"\n        }\n      },\n      {\n        "location": {\n          "type": "METHOD",\n          "path": "/pets/{petId}",\n          "method": "GET"\n        },\n        "properties": {\n          "tags": [\n            "pets"\n          ],\n          "summary": "Info for a specific pet"\n        }\n      },\n      {\n        "location": {\n          "type": "METHOD",\n          "path": "/pets",\n          "method": "GET"\n        },\n        "properties": {\n          "tags": [\n            "pets"\n          ],\n          "summary": "List all pets"\n        }\n      },\n      {\n        "location": {\n          "type": "METHOD",\n          "path": "/pets",\n          "method": "POST"\n        },\n        "properties": {\n          "tags": [\n            "pets"\n          ],\n          "summary": "Create a pet"\n        }\n      },\n      {\n        "location": {\n          "type": "PATH_PARAMETER",\n          "path": "/pets/{petId}",\n          "method": "*",\n          "name": "petId"\n        },\n        "properties": {\n          "description": "The id of the pet to retrieve"\n        }\n      },\n      {\n        "location": {\n          "type": "QUERY_PARAMETER",\n          "path": "/pets",\n          "method": "GET",\n          "name": "page"\n        },\n        "properties": {\n          "description": "Page number of results to return."\n        }\n      },\n      {\n        "location": {\n          "type": "QUERY_PARAMETER",\n          "path": "/pets",\n          "method": "GET",\n          "name": "type"\n        },\n        "properties": {\n          "description": "The type of pet to retrieve"\n        }\n      },\n      {\n        "location": {\n          "type": "REQUEST_BODY",\n          "path": "/pets",\n          "method": "POST"\n        },\n        "properties": {\n          "description": "Pet object that needs to be added to the store"\n        }\n      },\n      {\n        "location": {\n          "type": "RESPONSE",\n          "method": "*",\n          "statusCode": "200"\n        },\n        "properties": {\n          "description": "Successful operation"\n        }\n      },\n      {\n        "location": {\n          "type": "RESPONSE_HEADER",\n          "method": "OPTIONS",\n          "statusCode": "200",\n          "name": "Access-Control-Allow-Headers"\n        },\n        "properties": {\n          "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."\n        }\n      },\n      {\n        "location": {\n          "type": "RESPONSE_HEADER",\n          "method": "OPTIONS",\n          "statusCode": "200",\n          "name": "Access-Control-Allow-Methods"\n        },\n        "properties": {\n          "description": "Method or methods allowed when accessing the resource"\n        }\n      },\n      {\n        "location": {\n          "type": "RESPONSE_HEADER",\n          "method": "*",\n          "statusCode": "200",\n          "name": "Access-Control-Allow-Origin"\n        },\n        "properties": {\n          "description": "URI that may access the resource"\n        }\n      },\n      {\n        "location": {\n          "type": "RESPONSE_HEADER",\n          "method": "GET",\n          "statusCode": "200",\n          "name": "Content-Type"\n        },\n        "properties": {\n          "description": "Media type of request"\n        }\n      }\n    ]\n  }\n}\n'},2241:function(e,n,t){var a=t(1576);"string"==typeof a&&(a=[[e.id,a,""]]);t(9)(a,{});a.locals&&(e.exports=a.locals)}});
//# sourceMappingURL=23.js.map